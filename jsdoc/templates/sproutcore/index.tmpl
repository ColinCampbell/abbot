{!
function keys(o) {
	var keys = [];
	for (var k in o) { keys.push(k); }
	return keys;
}

function groupName(path) {
  var parts = path.split('/') ;
  
  var rootIndex = parts.indexOf('frameworks') ;
  if (rootIndex < 0) rootIndex = parts.indexOf('clients') ;
  
  if (rootIndex < 0) {
    return parts[parts.length - 2] ;
    
  } else {
    return parts.slice(rootIndex+2, parts.length-1).join('/') ;
  }
};

function getSymbols(className, thisClass) {
  var ret = [className.toLowerCase()] ;
  
  var f = function(data) {
    if (data && data.length) {
      var idx = data.length ;
      while(--idx >= 0) { 
        var name = data[idx].name ;
        if (name) ret.push(name.toLowerCase()) ;
      }
    }
  };
  
  f(thisClass.properties) ;
  f(thisClass.methods) ;
  
  return ret.join(' ') ;
};

!}
{ records: [<for each="classname" in="keys(data).sort()">
  { "type": "Doc", 
    "guid": "{+classname+}", 
    "title": "{+classname+}", 
    "url": "{+data[classname][0].docs+}", 
    "group": "{+groupName(data[classname][0].file.path)+}", 
    "symbols": "{+getSymbols(classname, data[classname][0])+}",
    "path": "{+data[classname][0].file.path+}"
  },</for>
  { "type": "Doc", 
    "guid": "_GLOBALS", 
    "title": "GLOBALS", 
    "url": "globals.html" 
  }]
}
